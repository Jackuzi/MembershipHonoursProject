buildscript {
    repositories {
        jcenter()
        google()
        maven {
            url 'http://nexus.gluonhq.com/nexus/content/repositories/releases'
        }
    }
    dependencies {
        classpath 'org.javafxports:jfxmobile-plugin:1.3.10'
        //junit
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-RC3'
    }
}

apply plugin: 'org.javafxports.jfxmobile'
//junit
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'http://nexus.gluonhq.com/nexus/content/repositories/releases'
    }

}

mainClassName = 'com.membershipApp.MembershipAppMain'

dependencies {
    compile 'com.gluonhq:charm:4.4.1'
    compile 'com.gluonhq:glisten-afterburner:1.2.1'
    compile 'egulias:EmailValidator4J:1.0.0'
    androidRuntime 'com.gluonhq:charm-down-core-android:3.7.0'
}
//junit
ext.junit4Version = '4.12'
ext.junitVintageVersion = '4.12.0'
ext.junitPlatformVersion = '1.0.0'
ext.junitJupiterVersion = '5.0.0'
ext.log4jVersion = '2.6.2'

junitPlatform {
    // platformVersion '1.0.0'
    filters {
        engines {
            // include 'junit-jupiter', 'junit-vintage'
            // exclude 'custom-engine'
        }
        tags {
            // include 'fast'
            exclude 'slow'
        }
        // includeClassNamePattern '.*Test'
    }
    // configurationParameter 'junit.jupiter.conditions.deactivate', '*'
    // enableStandardTestTask true
    // reportsDir file('build/test-results/junit-platform') // this is the default
    logManager 'org.apache.logging.log4j.jul.LogManager'
}
//scenic view libs


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile group: 'com.h2database', name: 'h2', version: '1.4.196'
    //junit
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
    testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")


}



jfxmobile {
    downConfig {
        version = '3.7.0'
        // Do not edit the line below. Use Gluon Mobile Settings in your project context menu instead
        plugins 'cache', 'display', 'lifecycle', 'statusbar', 'storage'
    }
    android {
        dexOptions {
            javaMaxHeapSize '3g'
        }
        //  javafxportsVersion = '8.60.9'
        //androidSdk = 'C:/Users/kamilek/AppData/Local/Android/sdk'

        manifest = 'src/android/AndroidManifest.xml'

        packagingOptions {

            exclude 'META-INF/DEPENDENCIES.txt'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/dependencies.txt'
            exclude 'META-INF/LGPL2.1'
        }
    }
    embedded {
        remotePlatforms {
            raspberry {
                host = '192.168.1.10'
                username = 'pi'
                password = 'raspberry'
                workingDir = '/home/pi/sample'
                jreLocation = '/opt/java'
                execPrefix = 'sudo'
            }
        }
    }
    ios {
        infoPList = file('src/ios/Default-Info.plist')
        forceLinkClasses = [
                'com.membershipApp.**.*',
                'com.gluonhq.**.*',
                'javax.annotations.**.*',
                'javax.inject.**.*',
                'javax.json.**.*',
                'org.glassfish.json.**.*'
        ]
    }
}
task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts'
    gradleVersion = '4.3.1'
}